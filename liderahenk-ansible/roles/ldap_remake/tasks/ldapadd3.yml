- name: Run Bash script and capture CURDBNO
  shell: |
    ldapmodify -Y EXTERNAL -H ldapi:/// << EOL
    dn: cn=module{0},cn=config
    changetype: modify
    add: olcModuleLoad
    olcModuleLoad: unique
    olcModuleLoad: ppolicy
    olcModuleLoad: memberof
    olcModuleLoad: pw-argon2
    EOL

- name: Set config and admin passwords
  debug:
    msg: "olcOverlay=unique,olcDatabase={%raw%}{{%endraw%}{{ CURDBNO }}{%raw%}}{%endraw%}mdb,cn=config"

- name: Run Bash script and capture CURDBNO
  shell: |
    ldapadd -Y EXTERNAL -H ldapi:/// << EOL
    dn: olcOverlay=unique,olcDatabase={%raw%}{{%endraw%}{{ CURDBNO }}{%raw%}}{%endraw%}mdb,cn=config
    changetype: add
    objectClass: olcUniqueConfig
    objectClass: top
    objectClass: olcConfig
    objectClass: olcOverlayConfig
    olcOverlay: unique
    olcUniqueAttribute: uid
    EOL

- name: Set config and admin passwords
  debug:
    msg: "1. YAPILDI"


- name: Run Bash script and capture CURDBNO
  shell: |
    ldapadd -Y EXTERNAL -H ldapi:/// << EOL
    dn: olcOverlay=memberof,olcDatabase={%raw%}{{%endraw%}{{ CURDBNO }}{%raw%}}{%endraw%}mdb,cn=config
    objectClass: olcMemberOf
    objectClass: top
    objectClass: olcConfig
    objectClass: olcOverlayConfig
    olcOverlay: memberof
    EOL

- name: Set config and admin passwords
  debug:
    msg: "2. YAPILDI"


- name: Run Bash script and capture CURDBNO
  shell: |
    ldapadd -Y EXTERNAL -H ldapi:/// << EOL
    dn: olcOverlay={0}ppolicy,olcDatabase={1}mdb,cn=config
    objectClass: olcOverlayConfig
    objectClass: olcPPolicyConfig
    olcOverlay: {0}ppolicy
    olcPPolicyDefault: {{ DEFAULTPOLICYDN }}
    olcPPolicyHashCleartext: FALSE
    olcPPolicyUseLockout: FALSE
    olcPPolicyForwardUpdates: FALSE
    EOL

- name: Set config and admin passwords
  debug:
    msg: "3. YAPILDI"

- name: Transfer the bash script template to the remote host
  template:
    src: liderahenk.ldif.j2
    dest: /tmp/liderahenk.ldif
    mode: "0755"  # Make the script executable
  become: true

- name: Transfer the bash script template to the remote host
  template:
    src: sudo.ldif.j2
    dest: /tmp/sudo.ldif
    mode: "0755"  # Make the script executable
  become: true

- name: Run Bash script and capture CURDBNO
  shell: |
    ldapadd -x -D "{{ CNCONFIGADMINDN }}" -f {{ LIDERAHENK_SCHEMA_PATH }} -w {{ CNCONFIGADMINPASSWD }}

- name: Run Bash script and capture CURDBNO
  shell: |
    ldapadd -x -D "{{ CNCONFIGADMINDN }}" -f {{ SUDO_SCHEMA_PATH }} -w {{ CNCONFIGADMINPASSWD }}

- name: Run Bash script and capture CURDBNO
  shell: |
    ldapadd -x -D "{{ ADMINDN }}" -w {{ ADMINPASSWD }} << EOL
    dn: cn=liderAhenkConfig,{{ BASEDN }}
    changetype: add
    objectClass: pardusLiderAhenkConfig
    liderServiceAddress: http://{{ LIDER_SERVER_ADDR }}:8181
    cn: liderAhenkConfig
    EOL

- name: Restart slapd service
  systemd:
    name: slapd
    state: restarted

- name: Add LDAP Entry
  community.general.ldap_entry:
    dn: "{{ USERDN }}"
    objectClass:
      - organizationalUnit
      - pardusLider
      - top
    attributes:
      ou: Users
      description: Users
    state: present
    bind_dn: "{{ ADMINDN }}"
    bind_pw: "{{ ADMINPASSWD }}"

- name: Add LDAP Entry for Agent
  community.general.ldap_entry:
    dn: "{{ AGENTDN }}"
    objectClass:
      - organizationalUnit
      - pardusLider
      - top
    attributes:
      ou: Agents
      description: pardusDeviceGroup
    state: present
    bind_dn: "{{ ADMINDN }}"
    bind_pw: "{{ ADMINPASSWD }}"

- name: Add LDAP Entry for Group
  community.general.ldap_entry:
    dn: "{{ GROUPDN }}"
    objectClass:
      - organizationalUnit
      - pardusLider
      - top
    attributes:
      ou: Groups
    state: present
    bind_dn: "{{ ADMINDN }}"
    bind_pw: "{{ ADMINPASSWD }}"

- name: Add LDAP Entry for User Group
  community.general.ldap_entry:
    dn: "{{ USERGROUPDN }}"
    objectClass:
      - organizationalUnit
      - pardusLider
      - top
    attributes:
      ou: User
      description: User groups
    state: present
    bind_dn: "{{ ADMINDN }}"
    bind_pw: "{{ ADMINPASSWD }}"

- name: Add LDAP Entry for Agent Group
  community.general.ldap_entry:
    dn: "{{ AGENTGROUPDN }}"
    objectClass:
      - organizationalUnit
      - pardusLider
      - top
    attributes:
      ou: Agent
      description: Agent groups
    state: present
    bind_dn: "{{ ADMINDN }}"
    bind_pw: "{{ ADMINPASSWD }}"

- name: Add LDAP Entry for Lider Console User
  community.general.ldap_entry:
    dn: "cn={{ LIDERCONSOLEUSER }},{{ USERDN }}"
    objectClass:
      - inetOrgPerson
      - organizationalPerson
      - pardusAccount
      - pardusLider
      - person
      - top
    attributes:
      cn: "{{ LIDERCONSOLEUSER }}"
      sn: "{{ LIDERCONSOLEUSER }}"
      uid: "{{ LIDERCONSOLEUSER }}"
      userPassword: "{{ LIDERCONSOLEPWD }}"
      mail: "{{ LIDERCONSOLEMAILADDR }}"
      liderPrivilege:
        - "[REPORT:ALL]"
        - "[TASK:{{ BASEDN }}:ALL]"
        - "ROLE_ADMIN"
        - "ROLE_USER"
    state: present
    bind_dn: "{{ ADMINDN }}"
    bind_pw: "{{ ADMINPASSWD }}"

- name: Add LDAP Entry for Simple LDAP User
  community.general.ldap_entry:
    dn: "uid={{ SIMPLELDAPUSER }},{{ USERDN }}"
    objectClass:
      - inetOrgPerson
      - organizationalPerson
      - pardusAccount
      - pardusLider
      - person
      - posixAccount
      - shadowAccount
      - top
    attributes:
      cn: "{{ SIMPLELDAPUSER }}"
      sn: "{{ SIMPLELDAPUSER }}"
      uid: "{{ SIMPLELDAPUSER }}"
      uidNumber: 5000
      gidNumber: 5000
      homeDirectory: "/home/{{ SIMPLELDAPUSER }}"
      userPassword: "{{ SIMPLELDAPUSERPWD }}"
      loginShell: "/bin/bash"
      description: "example ldap user"
    state: present
    bind_dn: "{{ ADMINDN }}"
    bind_pw: "{{ ADMINPASSWD }}"

- name: Add LDAP Entry for Admin Group
  community.general.ldap_entry:
    dn: "{{ ADMINGROUPDN }}"
    objectClass:
      - groupOfNames
      - top
      - pardusLider
    attributes:
      member:
        - "{{ ADMINDN }}"
        - "cn={{ LIDERCONSOLEUSER }},{{ USERDN }}"
        - "uid={{ SIMPLELDAPUSER }},{{ USERDN }}"
      cn: adminGroups
      liderPrivilege: ROLE_DOMAIN_ADMIN
      description: User group authorized to write on LDAP
    state: present
    bind_dn: "{{ ADMINDN }}"
    bind_pw: "{{ ADMINPASSWD }}"

- name: Add LDAP Entry for Domain Admin Group
  community.general.ldap_entry:
    dn: "{{ DOMAINADMINGROUPDN }}"
    objectClass:
      - groupOfNames
      - top
      - pardusLider
    attributes:
      member:
        - "uid={{ SIMPLELDAPUSER }},{{ USERDN }}"
      cn: domainAdminGroup
      liderPrivilege: ROLE_DOMAIN_ADMIN
      description: Domain admin group for register client
    state: present
    bind_dn: "{{ ADMINDN }}"
    bind_pw: "{{ ADMINPASSWD }}"

- name: Add LDAP Entry for Role Group
  community.general.ldap_entry:
    dn: "{{ ROLEGROUPDN }}"
    objectClass:
      - organizationalUnit
      - top
      - pardusLider
    attributes:
      ou: Role
      description: group of roles
    state: present
    bind_dn: "{{ ADMINDN }}"
    bind_pw: "{{ ADMINPASSWD }}"

- name: Add LDAP Entry for Sudo Role
  community.general.ldap_entry:
    dn: "cn=rol-1,{{ ROLEGROUPDN }}"
    objectClass:
      - sudoRole
      - top
    attributes:
      cn: rol-1
      sudoUser: "{{ SIMPLELDAPUSER }}"
      sudoHost: ALL
      sudoCommand: ALL
    state: present
    bind_dn: "{{ ADMINDN }}"
    bind_pw: "{{ ADMINPASSWD }}"

- name: Add LDAP Entry for Policy Group
  community.general.ldap_entry:
    dn: "{{ POLICYGROUPDN }}"
    objectClass:
      - organizationalUnit
      - pardusLider
      - top
    attributes:
      ou: Policies
      description: group of policy
    state: present
    bind_dn: "{{ ADMINDN }}"
    bind_pw: "{{ ADMINPASSWD }}"

- name: Run Bash script and capture CURDBNO
  shell: |
    ldapmodify -Y EXTERNAL -H ldapi:/// << EOL
    dn: olcDatabase={1}mdb,cn=config
    changetype: modify
    add: olcAccess
    olcAccess: {0}to attrs=userPassword,shadowLastChange by group.exact="{{ ADMINGROUPDN }}" write by anonymous auth by self write
    olcAccess: {9}to dn.base="{{ BASEDN }}" by * read by * break
    olcAccess: {10}to dn.base="{{ USERDN }}" by * read by * break
    olcAccess: {11}to dn.base="{{ AGENTDN }}" by * read by * break
    olcAccess: {12}to dn.base="{{ POLICYGROUPDN }}" by * read by * break
    olcAccess: {13}to dn.base="{{ GROUPDN }}" by * read by * break
    olcAccess: {14}to dn.base="{{ USERGROUPDN }}" by * read by * break
    olcAccess: {15}to dn.base="{{ AGENTGROUPDN }}" by * read by * break
    olcAccess: {16}to dn.base="{{ ROLEGROUPDN }}" by * read by * break
    olcAccess: {17}to * by self write
    olcAccess: {1}to dn.subtree="{{ ROLEGROUPDN }}" by dn.subtree="{{ AGENTDN }}" read by * break
    olcAccess: {2}to dn.subtree="{{ USERDN }}" by dn.subtree="{{ AGENTDN }}" read by * break
    olcAccess: {3}to dn.subtree="{{ USERDN }}" by group.exact="{{ ADMINGROUPDN }}" write by * break
    olcAccess: {4}to dn.subtree="{{ AGENTDN }}" by group.exact="{{ ADMINGROUPDN }}" write by * break
    olcAccess: {5}to dn.subtree="{{ POLICYGROUPDN }}" by group.exact="{{ ADMINGROUPDN }}" write by * break
    olcAccess: {6}to dn.subtree="{{ USERGROUPDN }}" by group.exact="{{ ADMINGROUPDN }}" write by * break
    olcAccess: {7}to dn.subtree="{{ ROLEGROUPDN }}" by group.exact="{{ ADMINGROUPDN }}" write by * break
    olcAccess: {8}to dn.subtree="{{ AGENTGROUPDN }}" by group.exact="{{ ADMINGROUPDN }}" write by * break
    EOL




# systemctl restart slapd.service

- name: Restart slapd Service
  systemd:
    name: slapd
    state: restarted